generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  username   String   @unique @db.VarChar(100)
  password   String   @db.VarChar(30)
  exams      exams[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model exams {
  examId      Int         @id @default(autoincrement())
  created_at  DateTime    @default(now()) @db.Timestamptz(6)
  id          String      @db.Uuid
  type        String      @db.VarChar
  subject     String      @db.VarChar
  subjectCode String?     @db.VarChar
  users       users       @relation(fields: [id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  questions   questions[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model questions {
  quesId     Int      @id @unique @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  examId     Int
  ques       String
  type       String   @db.VarChar
  correct    String
  exams      exams    @relation(fields: [examId], references: [examId], onDelete: NoAction, onUpdate: NoAction)
}
